{
  "_id": "page.validation",
  "_type": "page.content",
  "body": "You can override these if you need:\r\n\r\n1. In 'Build mode', navigate to the page that contains the input/field you want to add validation to\r\n2. Under 'Components', click on the component name\r\n3. Click on ‘Validation and error messages’- this opens up a sub-menu\r\n\r\n## Setting custom validation\r\n\r\nBy default, all inputs are set to 'required' (the status under 'Required' should say 'true').\r\n\r\nTo change this, click on 'Required'. You'll then have 3 options:\r\n\r\n- Yes (sets the field as mandatory - default)\r\n- No (sets the field as optional)\r\n- If (sets a condition to show the field)\r\n\r\nIf you select 'If', you'll then be able to set conditional logic. This sets whether the user will be shown the question based on previous answers they've given.\r\n\r\nFrom the drop-down lists, choose:\r\n\r\n1. An input (a question from elsewhere in the form)\r\n2. A matching condition (for example, 'is', 'is not', 'starts with' or 'exists')\r\n\r\nIf the input is a radio list, checkbox or select list, you'll also be able to choose from the list of possible answers.\r\n\r\nTo add multiple conditions, click on 'Convert to multiple conditions'. You can then choose whether the validation should match:\r\n\r\n- any of the conditions\r\n- all of the conditions\r\n- at least one of the conditions\r\n\r\nFind out more about creating [additional components (conditional reveal)](/additional-components).\r\n\r\n## Validating number inputs\r\n\r\nIf you want the user to input a number, you can validate the number they enter.\r\n\r\n1. In 'Properties mode', navigate to the component containing the number input/field you want to customise. \r\n2. Click on ‘Validation and error messages’\r\n3. Click on the condition you want to set\r\n\r\nFor example, if you want to make the user enter a number that's a multiple of 10, click on 'Multiple of', enter '10' in the field and click the ‘Update’ button.\r\n\r\n## Validating text inputs\r\n\r\nIf you want the user to input text (a string), you can validate the text they enter.\r\n\r\n1. In 'Properties mode', navigate to the component containing the number input/field you want to customise. \r\n2. Click on ‘Validation and error messages’\r\n3. Click on the condition you want to set\r\n\r\n- **Minimum length**: minimum characters of string \r\n- **Maximum length**: maximum characters of string \r\n- **Pattern to match string against**: you can enter a regular expression to validate the string against\r\n\r\n## Setting custom error messages\r\n\r\nTo edit an error message, click on ‘Summary error’ or ‘Input error’. \r\n\r\nThis takes you to a new screen where you can specify the error message. Click the ‘Update’ button to save.\r\n\r\n- The ‘Summary error’ will appear at the top of the user’s screen.\r\n- The ‘Input error’ will appear next to the input field.",
  "components": [
    {
      "_id": "page.validation--inset",
      "_type": "inset",
      "html": "[Back to contents](/contents)"
    }
  ],
  "heading": "Setting validation and customising error messages",
  "lede": "Form Builder sets default validation and error messages for each type of user input.",
  "url": "validation"
}