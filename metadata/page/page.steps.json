{
  "_id": "page.steps",
  "_type": "page.content",
  "body": "Your service might contain:\r\n\r\n- one series of steps that follow from the start page\r\n- multiple series of steps (for example, if particular pages have their own steps) - these can follow most types of page\r\n\r\n## Why form builder uses steps\r\n\r\nSteps allow you to:\r\n\r\n- create a page that automatically flows from a previous page, without having to specify 'go here next'\r\n- easily change the order of the flow, by reordering the steps in a list (through drag and drop)\r\n- create sections in your form without having to add a section heading to every page - you simply add the section heading once to the 'parent' page, and the steps of that page inherit the heading\r\n- move entire sections to a different place in the flow, by simply moving the parent page - all the child pages move with it\r\n\r\n## Choosing when to enable steps\r\n\r\nEvery form's start page has steps enabled by default.\r\n\r\n## Example 1\r\n\r\nLet’s say you have a simple service containing several screens. All users move through the screens ('pages') sequentially (though they might skip a page, depending on their answers).\r\n\r\nAll the pages would be steps of the start page.\r\n\r\nYou would create:\r\n\r\n* a start page (page 1)\r\n* a first step to the start page (page 2)\r\n* a second step to the start page (page 3)\r\n* a third step to the start page (page 4)\r\n* and so on...\r\n\r\n## Example 2\r\n\r\nSay you now want to add a series of screens that a user only sees if they give a particular answer to the question on page 3.\r\n\r\nTo do this, you would add the new screens as steps to page 3. Let's call them page 3a and page 3b.\r\n\r\nTo add steps to a page other than the start page, you must first 'enable steps' on that page (see below).\r\n\r\nThese new screens would always flow from the question on page 3 - even if you later decide to move that question to a different place in the form.\r\n\r\nUsers can only see pages 3a and 3b if they land on page 3 - if they skip over page 3 (for example, because of an answer they gave on page 2), they will never see 3a and 3b.\r\n\r\n## How to enable steps\r\n\r\nTo add steps to a page, you must first 'enable steps' on that page.\r\n\r\nA start page has steps enabled by default.\r\n\r\n1. Go to the page you want to add steps to.\r\n2. In the top navigation, click on 'Properties mode'.\r\n3. Click on 'enable steps' (if the page cannot have steps, this option will not appear).\r\n4. Select 'Yes' and click 'Update Enable steps'.\r\n\r\n## Add steps\r\n\r\nYou can add steps to your start page or to any page that you've enabled steps for.\r\n\r\n1. Go to the page you want to add steps to.\r\n2. In the top navigation, click on 'Properties mode'.\r\n3. Under 'Steps', click 'Add step'.\r\n4. On the next screen, choose the type of step (page) you want to create.\r\n5. On the next screen, give your page a unique id and click ‘Set id’.\r\n\r\n[Read more about how to structure steps in the technical documentation](https://fbdocs.herokuapp.com/overview/flow/).\r\n\r\n## Reorder or remove steps\r\n\r\n1. Go to the 'parent' page whose steps you want to reorder or remove.\r\n2. In the top navigation, click on 'Properties mode'.\r\n3. Click 'Steps'.\r\n4. On the next screen, drag and drop the steps to reorder them.\r\n5. To delete a step, click 'Remove' for that step.\r\n6. Click 'Update steps' to confirm\r\n\r\nAfter moving or removing a step, click ‘Update steps’.",
  "components": [
    {
      "_id": "page.steps--inset",
      "_type": "inset",
      "html": "[Back to contents](/contents)"
    }
  ],
  "heading": "Steps: how to link pages together",
  "lede": "In a service, you’ll typically link pages together as a series of steps.",
  "url": "steps"
}